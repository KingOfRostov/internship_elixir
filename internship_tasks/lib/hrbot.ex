defmodule HrBot do
    @moduledoc """
    Включает в себя функцию `hello/2`, которая приветствует нового сотрудника.
    """

    @doc """
    Печатает приветствие

    ## Параметры

        - name: Строка, в которой находится имя человека.
        - position: Строка, в которой находится профессия человека. По умолчанию имеет значение "сотрудник"
        
    ## Примеры

        iex> HrBot.hello("Сергей", "Elixir-программист")
        "Поприветствуйте Сергея, нашего нового Elixir-программиста!"

        iex> HrBot.hello("Оля")
        "Поприветствуйте Олю, нашего нового сотрудника!"

    """
    def hello(name, position \\ "сотрудник") do
        # Получаем последний символ имени, что бы проверять окончания
        name_last_char = String.last(name)

        # Заводим переменную, в которой будет имя без последней буквы 
        # Что бы уменьшить громоздкость кода ниже
        form_name = name |> String.capitalize() |> String.slice(0..-2)
        
        new_name = cond do
            # Если заканчивается на согласную - добавляем а
            not String.contains?("аоиеёэыуюяьъй", name_last_char) ->
                "#{name}а"

            # Если заканчивается на я - заменяем на ю    
            name_last_char == "я" -> 
                "#{form_name}ю"

            # Если заканчивается на а - заменяем на у        
            name_last_char == "а" ->
                "#{form_name}у"

            # Если заканчивается на иль - заменяем на я        
            name |> String.slice(-3..-1) == "иль" ->
                "#{form_name}я"

            # Если заканчивается на и, о, у, ь - заменяем на я    
            String.contains?("иоуь",name_last_char) ->
                name   

            # Во всех остальных случаях - добавляем я    
            true ->
                "#{form_name}я"
        end
        
        # Получаем последний символ должности, что бы проверять окончания
        position_last_char = String.last(position)

        new_position = cond do
            # Если заканчивается на ец - заменяем на ца
            String.contains?("ец", String.slice(position, -2..-1) ) -> 
                "#{String.slice(position, 0..-3)}ца"

            # Если заканчивается на ей - заменяем на ея    
            String.contains?("ей", String.slice(position, -2..-1) ) -> 
                "#{String.slice(position, 0..-3)}ея" 

            # Если заканчивается на я - заменяем на ю    
            position_last_char == "я" ->
                "#{String.slice(position, 0..-2)}ю"

            # Если заканчивается на ь - заменяем на я    
            position_last_char == "ь" ->
                "#{String.slice(position, 0..-2)}я"

            # Если заканчивается на й - заменяем на ого    
            position_last_char == "й" ->
                "#{String.slice(position, 0..-3)}ого"

            # Если заканчивается на я - заменяем на у
            position_last_char == "а" ->
                "#{String.slice(position, 0..-2)}у"

            # Во всех остальных случаях добавляем а
            true -> 
                "#{position}а"
        end

        "Поприветствуйте #{new_name}, нашего нового #{new_position}!"
        
    end

    # def dummy_test do
    #     test_string = " Абрам  Аваз  Аввакум  Август  Августин  Авдей  Авраам  Автандил  Агап  Агафон  Аггей  Адам  Адис  Адольф  Адриан  Азамат  Айдар  Айнур  Айрат  Аким  Алан  Алей  Александр  Алексей  Али  Альберт  Альфред  Амадей  Амадеус  Амаяк  Амвросий  Ананий  Анастасий  Анатолий  Анвар  Ангел  Андоим  Андрей  Аникита  Антон  Арам  Арий  Аристарх  Аркадий  Арман  Арно  Арнольд  Арон  Арсен  Арсений  Арслан  Артем  Артемий  Артур  Архип  Аскар  Аскольд  Аслан  Афанасий  Ахмет  Ашот  Бальтазар  Бежен  Бенедикт  Берек  Бернард  Бертран  Богдан  Болеслав  Борис  Бронислав  Булат  Вадим  Валентин  Валерий  Вальтер  Варфоломей  Василий  Вацлав  Велизар  Венедикт  Вениамин  Викентий  Виктор  Вилли  Вильгельм  Виссарион  Виталий  Витольд  Владимир  Владислав  Владлен  Володар  Вольдемар  Всеволод  Вячеслав  Гавриил  Галактион  Гарри  Гастон  Гаяс  Гевор  Геннадий  Генрих  Георгий  Геракл  Геральд  Герасим  Герман  Глеб  Гордей  Гордон  Горислав  Градимир  Григорий  Гурий  Густав  Давид  Дамир  Даниил  Даниэль  Данияр  Дарий  Дементий  Демид  Демосфен  Демьян  Денис  Джамал  Джордан  Дмитрий  Добрыня  Дональд  Донат  Дорофей  Евгений  Евграф  Евдоким  Евсевий  Евсей  Евстафий  Егор  Елеазар  Елисей  Емельян  Еремей  Ермолай  Ерофей  Ефим  Ефрем  Жан  Ждан  Жорж  Захар  Зиновий  Ибрагим  Иван  Игнатий  Игорь  Илларион  Ильдар  Ильнар  Ильнур  Илья  Ильяс  Иннокентий  Иоанн  Иосиф  Ипполит  Искандер  Ислам  Камиль  Карим  Карл  Кирилл  Клим  Кондрат  Константин  Корней  Кузьма  Лавр  Лаврентий  Лев  Леон  Леонид  Леонтий  Леопольд  Лука  Лукьян  Любим  Макар  Максим  Максимилиан  Марат  Марк  Марсель  Мартин  Матвей  Мирон  Мирослав  Митрофан  Михаил  Михей  Мишель  Мстислав  Мурат  Муслим  Назар  Назарий  Наиль  Натан  Наум  Нестор  Никанор  Никита  Никифор  Николай  Никон  Нифонт  Норман  Овидий  Олан  Олег  Олесь  Онисим  Орест  Осип  Оскар  Павел  Петр  Платон  Прохор  Равиль  Радик  Радмир  Радомир  Раду  Рамазан  Рамиль  Ратибор  Ратмир  Рафаэль  Рахим  Рашид  Ринат  Ричард  Роберт  Родион  Ролан  Роман  Ростислав  Рудольф  Руслан  Рустам  Сабир  Савва  Савелий  Салим  Самвел  Самсон  Святослав  Севастьян  Семён  Серафим  Сергей  Соломон  Спартак  Спиридон  Станислав  Степан  Стефан  Сулейман  Султан  Тагир  Тамерлан  Тарас  Теодор  Тигран  Тимофей  Тимур  Тихон  Трофим  Умар  Устин  Фаддей  Фарид  Федор  Федот  Феликс  Феодосий  Фердинанд  Фидель  Филимон  Филипп  Флор  Флорентий  Фома  Франц  Фридрих  Фуад  Харитон  Хасан  Христиан  Христос  Христофор  Шамиль  Эдвард  Эдгар  Эдуард  Эльдар  Эмиль  Эмин  Эмир  Эммануил  Эрик  Эрнест  Юлиан  Юлий  Юрий  Юсуф  Юхим  Яким  Яков  Ян  Януарий"
    #     test_list = String.split(test_string)
    #     for test_name <- test_list, do: IO.puts(hello(test_name))
    # end
end